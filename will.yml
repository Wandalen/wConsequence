about:
  name: wConsequence
  description: >-
    Advanced synchronization mechanism. Asynchronous routines may use
    Consequence to wrap postponed result, what allows classify callback for such
    routines as output, not input, what improves analyzability of a program.
    Consequence may be used to make a queue for mutually exclusive access to a
    resource. Algorithmically speaking Consequence is 2 queues ( FIFO ) and a
    customizable arbitrating algorithm. The first queue contains available
    resources, the second queue includes competitors for this resources. At any
    specific moment, one or another queue may be empty or full. Arbitrating
    algorithm makes resource available for a competitor as soon as possible.
    There are 2 kinds of resource: regular and erroneous. Unlike Promise,
    Consequence is much more customizable and can solve engineering problem
    which Promise cant. But have in mind with great power great responsibility
    comes. Consequence can coexist and interact with a Promise, getting
    fulfillment/rejection of a Promise or fulfilling it. Use Consequence to get
    more flexibility and improve readability of asynchronous aspect of your
    application.
  version: 0.5.0
  enabled: 1
  license: MIT
  npm.name: wConsequence
  author: Kostiantyn Wandalen <wanalen@01.school>
  keywords:
    - wTools
    - Callback
    - Event
    - Signal
    - Mutex
    - Semaphore
    - Async
    - Promise
  contributors:
    - Kostiantyn Wandalen <wanalen@01.school>
    - Volodymyr M. <volodymyr.migdal@gmail.com>
    - Ihor O. <iostashvxi@gmail.com>
  interpreters:
    - njs >= 10.0.0
    - chrome >= 60.0.0
    - firefox >= 60.0.0
  npm.scripts:
    test: 'wtest .run proto/** rapidity:-3'
    docgen: wdocgen .build proto
build:
  proto.export:
    criterion:
      content: proto
      export: 1
    steps:
      - 'step::proto.export'
  doc.export:
    criterion:
      content: doc
      export: 1
    steps:
      - 'step::doc.export'
  npm.export:
    criterion:
      content: npm
      export: 1
    steps:
      - 'step::npm.publish'
  export:
    criterion:
      default: 1
      export: 1
    steps:
      - 'build::proto.export'
  debug:
    criterion:
      default: 1
      debug: debug
      raw: raw
      content: prime
    steps:
      - 'step::clean.out*=2'
      - reflect.proto.*=1
  compiled.debug:
    criterion:
      debug: debug
      raw: compiled
      content: prime
    steps:
      - 'step::clean.out*=2'
      - transpile.proto.no.tests*=1
      - transpile.proto.only.tests*=1
  raw.release:
    criterion:
      debug: release
      raw: raw
      content: prime
    steps:
      - 'step::clean.out*=2'
      - transpile.proto.raw
  release:
    criterion:
      debug: release
      raw: compiled
      content: prime
    steps:
      - 'step::clean.out*=2'
      - transpile.proto.no.tests*=1
      - transpile.proto.only.tests*=1
  npm:
    criterion:
      debug: debug
      raw: raw
      content: npm
    steps:
      - npm.generate.*=1
  all:
    steps:
      - 'build::debug'
      - 'build::compiled.debug'
      - 'build::raw.release'
      - 'build::release'
      - 'build::npm'
path:
  repository: 'git+https:///github.com/Wandalen/wConsequence.git'
  origins:
    - 'git+https:///github.com/Wandalen/wConsequence.git'
    - 'npm:///wConsequence'
  bugtracker: 'https:///github.com/Wandalen/wConsequence/issues'
  in: .
  out: out
  temp:
    - 'path::out'
    - package-lock.json
    - package.json
    - node_modules
  proto: ./proto
  export: '{path::proto}/**'
  doc: ./doc
  out.raw.debug:
    path: '{path::out}/debug'
    criterion:
      debug: debug
      raw: raw
      content: prime
  out.compiled.debug:
    path: '{path::out}/compiled.debug'
    criterion:
      debug: debug
      raw: compiled
      content: prime
  out.raw.release:
    path: '{path::out}/raw.release'
    criterion:
      debug: release
      raw: raw
      content: prime
  out.compiled.release:
    path: '{path::out}/release'
    criterion:
      debug: release
      raw: compiled
      content: prime
  entry.proto.no.tests:
    path: proto/wtools/abase/l9/consequence/Namespace.s
    criterion:
      tests: no.tests
  entry.proto.only.tests:
    path: proto/**/*.test.s
    criterion:
      tests: only.tests
  entry.out.raw.debug:
    path: '{path::out.*=1}/source/wtools/abase/l9/consequence/Namespace.s'
    criterion:
      debug:
        - debug
        - release
      raw: raw
      content: prime
  entry.out.compiled.debug:
    path: '{path::out.*=}/source/Index.s'
    criterion:
      debug:
        - debug
        - release
      raw: compiled
      content: prime
  npm.proto.entry:
    - proto/wtools/abase/l9/consequence/Namespace.s
    - proto/node_modules/wConsequence
reflector:
  reflect.proto:
    inherit: predefined.*
    criterion:
      tests: no.tests
      debug:
        - debug
        - release
      raw:
        - raw
        - compiled
      content: prime
    filePath:
      'path::proto': '{path::out.*=1}/source'
  transpile.proto.raw:
    inherit: predefined.*
    step:
      inherit: files.transpile
      entry: 'path::entry.proto.no.tests'
    criterion:
      raw: raw
      debug: release
      content: prime
    filePath:
      'path::proto': '{path::out.raw.release}'
  transpile.proto.no.tests.compiled:
    inherit: predefined.*
    step:
      inherit: files.transpile
      entry: 'path::entry.proto.*=1'
    criterion:
      tests: no.tests
      raw: compiled
      debug:
        - debug
        - release
      content: prime
    filePath:
      '**.test*': 0
      '**.test/**': 0
      'path::proto': '{path::out.*=1}/Main.s'
  transpile.proto.only.tests.compiled:
    inherit: predefined.*
    step:
      inherit: files.transpile
      entry: 'path::entry.proto.*=1'
      external.before: '{path::out.*=1}/Main.s'
    criterion:
      tests: only.tests
      raw: compiled
      debug:
        - debug
        - release
      content: prime
    filePath:
      '**.test*': 1
      'path::proto': '{path::out.*=1}/Tests.test.s'
step:
  proto.export:
    inherit: module.export
    export: 'path::export'
    tar: 0
    criterion:
      content: proto
  doc.export:
    inherit: module.export
    export: 'path::doc'
    tar: 0
    criterion:
      content: doc
  npm.export:
    inherit: module.export
    export: out.npm
    tar: 0
    criterion:
      content: npm
  npm.publish:
    shell: npm publish
  npm.generate:
    inherit: npm.generate
    entryPath: 'path::entry.out.*=1'
    packagePath: '{path::out.*=1}/package.json'
    filesPath: '{path::out.*=1}/source/**'
    criterion:
      debug:
        - debug
        - release
      raw:
        - raw
        - compiled
  clean.out:
    inherit: files.delete
    filePath: '{path::out.*=1}/source'
    criterion:
      debug:
        - debug
        - release
      raw:
        - raw
        - compiled
      tests:
        - no.tests
        - only.tests
      content:
        - prime
        - npm
  clean.out.npm:
    inherit: files.delete
    filePath: 'path::out.*=1'
    criterion:
      debug: debug
      raw: compiled
      tests: no.tests
      content: npm
  tst.proto:
    shell: 'tst {path::proto}'
    criterion:
      content: proto
  tst.debug:
    shell: 'tst {path::out.*=1}'
    criterion:
      content: prime
      debug: debug
  tst.release:
    shell: 'tst {path::out.*=1}'
    criterion:
      content: prime
      debug: release
submodule:
  wTools:
    path: 'npm:///wTools'
    enabled: 0
  wCopyable:
    path: 'npm:///wCopyable'
    enabled: 0
  wProto:
    path: 'npm:///wProto'
    enabled: 0
  wprocedure:
    path: 'npm:///wprocedure'
    enabled: 0
  wConsequence:
    path: 'hd://.'
    enabled: 0
    criterion:
      development: 1
  eslint:
    path: 'npm:///eslint#7.1.0'
    enabled: 0
    criterion:
      development: 1
  wTesting:
    path: 'npm:///wTesting'
    enabled: 0
    criterion:
      development: 1
  wdeasync:
    path: 'npm:///wdeasync'
    enabled: 0
    criterion:
      development: 1
